<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <appSettings>
    <add key="AWSAccessKey" value="AKIAJJV6MLSRX7C5AW5Q"/>
    <add key="AWSSecretKey" value="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"/>
    <add key="AWSBucket" value="STNStorageTest"/>
    <add key="AWSBaseUrl" value="http://STNStorage.s3.amazonaws.com/"/>
    <add key="AGSSTNServer" value="https://stntestmapservices.wim.usgs.gov:6080/arcgis/rest/services/STN"/>
    <!--AWSProfileName is used to reference an account that has been registered with the SDK.
If using AWS Toolkit for Visual Studio then this value is the same value shown in the AWS Explorer.
It is also possible to registered an accounts using the <solution-dir>/packages/AWSSDK-X.X.X.X/tools/account-management.ps1 PowerShell script
that is bundled with the nuget package under the tools folder. (testing environment: STNTestRDS)-->
    <add key="AWSProfileName" value=""/>
  </appSettings>
  <connectionStrings>
    <!--STNTestRDS , STNRDS-->
    <add name="STNEntities2"
      connectionString="metadata=res://*/STNModel.csdl|res://*/STNModel.ssdl|res://*/STNModel.msl;provider=Oracle.DataAccess.Client;provider connection string=&quot;DATA SOURCE=STNTestRDS;PASSWORD={1};PERSIST SECURITY INFO=True;USER ID={0}&quot;"
      providerName="System.Data.EntityClient"/>
  </connectionStrings>
  <system.web>
    <httpRuntime maxRequestLength="5000000"/>
    <sessionState mode="InProc" cookieless="UseCookies" timeout="480"/>
    <!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
        -->
    <compilation debug="true" targetFramework="4.0">
      <assemblies>
        <add assembly="System.Data.Entity, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
      </assemblies>
    </compilation>
    <!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
        -->
    <authentication mode="None"/>
    <!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm"/>
            <error statusCode="404" redirect="FileNotFound.htm"/>
        </customErrors>
        -->
    <!--<pages pageParserFilterType="OpenRasta.Codecs.WebForms.OpenRastaPageParserFilter, OpenRasta.Codecs.WebForms" controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
      <namespaces>
        <add namespace="OpenRasta.Web"/>
        <add namespace="OpenRasta.Web.Markup"/>        
        <add namespace="OpenRasta"/>
        <add namespace="STNServices2.Handlers"/>
        <add namespace="STNServices2.Resources"/>
        <add namespace="STNServices2"/>
        <add namespace="System.ServiceModel.Syndication"/>
      </namespaces>
    </pages>-->
    <httpHandlers>
      <add verb="*" path="*.rastahook" type="OpenRasta.Hosting.AspNet.OpenRastaHandler, OpenRasta.Hosting.AspNet"/>
    </httpHandlers>
    <httpModules>
      <add name="OpenRastaModule" type="OpenRasta.Hosting.AspNet.OpenRastaModule, OpenRasta.Hosting.AspNet"/>
    </httpModules>
  </system.web>
  <!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
    -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules>
      <add name="OpenRastaModule" type="OpenRasta.Hosting.AspNet.OpenRastaModule, OpenRasta.Hosting.AspNet"/>
    </modules>
    <handlers>
      <add name="OpenRastaHandler" verb="*" path="*.rastahook"
        type="OpenRasta.Hosting.AspNet.OpenRastaHandler, OpenRasta.Hosting.AspNet, Version=2.0.0.0, Culture=neutral"/>
    </handlers>
    <security>
      <requestFiltering>
        <requestLimits maxAllowedContentLength="500000000"/>
      </requestFiltering>
    </security>
  </system.webServer>
  <system.diagnostics>
    <sources>
      <source name="openrasta" switchName="OpenRasta">
        <listeners>
          <add name="ErrorEventLog"/>
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="OpenRasta" value="All"/>
    </switches>
    <sharedListeners>
      <add name="ErrorEventLog" type="System.Diagnostics.EventLogTraceListener" initializeData="Application"/>
    </sharedListeners>
  </system.diagnostics>
</configuration>